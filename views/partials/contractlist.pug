mixin contractlist(contracts)
  .d-none(id="datatable_parent")
    .d-none.datatable-buttons(for-id="datatable_length")

      if attributes.fnExport 
        .datatable-button
          if attributes.fnExport
            a.datatable-button.btn.btn-light.export-data(href='#' title="Daten exportieren")
              span.fa.fa-file-import 

      if attributes.fnImport
        .datatable-button
            a.datatable-button.btn.btn-light.sidebar-action(href=_url('/process/import') title="Daten importieren")
              span.fa.fa-file-export             

      if attributes.fnSelectable && attributes.fnBulkDelete
        .datatable-button
            a.datatable-button.btn.btn-light.bulk-delete(href='#' title="Ausgewählte " + _t(attributes.fnBulkDelete+'s') + " löschen" data-target=attributes.fnBulkDelete)
              span.fa.fa-trash                     

      if attributes.fnViews
        .input-group.datatable-button
          .input-group-prepend
            .input-group-text
              span.fa.fa-glasses
          select.custom-select(id="saved_views" title="Gespeicherte Ansichten" autocomplete="off" data-views=currentUser.savedViews || "[]")
            option(value="default") Standardansicht
            each view, index in JSON.parse(currentUser.savedViews || "[]")
              option(value=index)=view.name
          .input-group-append
            button.form-control.datatable-button.btn.btn-light.dropdown-button(title="Ansichtsaktionen" id="view_actions" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false")
              span.fa.fa-cogs
            .dropdown-menu( aria-labelledby="view_actions")
              a.dropdown-item.create-view(href='#')
                span.fa.fa-plus    
                span  Ansicht erstellen        
              a.dropdown-item.save-view(href='#')
                span.fa.fa-save
                span  Ansicht speichern
              a.dropdown-item.delete-view(href='#')
                span.fa.fa-trash
                span  Ansicht löschen         
              

      if attributes.fnFilter
        .datatable-button
          a.datatable-button.btn.btn-light.toggle-filters(href='#' title="Filter anzeigen")
            span.fa.fa-search-plus 

      if attributes.fnColumns
        .datatable-button
          select.checkbox-select(id="column_select" multiple="multiple" autocomplete="off") #[span.fa.fa-cogs]
            each column in contracts.columns
              option(value=column.id selected=column.visible?"selected":undefined)= column.label

      if attributes.fnAdd
        .datatable-button        
          a.datatable-button.btn.btn-light.sidebar-action(href=_url('/user/add') title="Kreditgeber*in Hinzufügen")
            span.fa.fa-plus 
            span  
            span.fa.fa-id-card

      if attributes.fnProcessInterestPayment
        .datatable-button        
          a.datatable-button.btn.btn-light.sidebar-action(id="process_interest_payment" href=_url('/process/startinterestpayment/'+attributes.year) data-parameters="" title="Assistent*in für jährliche Zinsauszahlung starten")
            span.fa.fa-cogs
            span  
            span Zinsauszahlung starten

        .input-group.datatable-button
          .input-group-prepend
            .input-group-text
              span.fa.fa-calendar
          select.custom-select(id="interest_year" title="Zinsjahr" autocomplete="off")
            for year in attributes.years
              option(value=year selected=year===attributes.year?'selected':undefined)=year

    table.table.table-striped(id="datatable" data-auto-width="true" width="100%" data-interest-year=attributes.year class=attributes.fnSelectable?"selectable":"")
      thead
        tr
          if attributes.fnSelectable
            th.fit.selector(data-orderable="false")
              span.not-selected.fa.fa-square
              span.selected.fa.fa-check-square.d-none
          each column, columnIndex in contracts.columns
            th(data-visible=(column.visible?false:'') data-name=column.id id=column.id class=column.class data-responsive-priority=(column.priority?column.priority:"100") data-filter=column.filter data-filter-options=column.filterOptions?column.filterOptions:undefined)= column.label
          th(data-orderable="false" data-responsive-priority="1").fit.text-center 
            span.fa.fa-cogs
      tbody
        each row in contracts.data
          tr
            if attributes.fnSelectable
              td.selector.fit.selectable
                span.not-selected.fa.fa-square
                span.selected.fa.fa-check-square.d-none              
            each cell, cellIndex in row
              if cell === false
                td.selectable(title=_t('no_contract') data-order='' class=contracts.columns[cellIndex].class?contracts.columns[cellIndex].class:"") -
              else
                td.selectable(data-order=(cell.order?cell.order:cell.value) class=cell.class + (contracts.columns[cellIndex].class?" "+contracts.columns[cellIndex].class:""))!=cell.value
            td.fit.text-right
              if row[15] === false
                a.btn.btn-light.btn-sm(href=_url('/user/show/'+row[1].value)) #[span.fa.fa-search-plus]  
              else
                a.btn.btn-light.btn-sm(href=_url('/user/show/'+row[1].value+'#show_contract_'+row[17].value)) #[span.fa.fa-search-plus]
  script(type='text/javascript' src=_url('/public/javascripts/contractlist.js')) 
